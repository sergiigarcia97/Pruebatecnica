
package com.app.ws; //Esta es la estructura de paquete creada

import javax.ws.rs.*; //Importamos la librería para manejar RESTful
import java.io.File;  // Import the File class
import java.io.FileNotFoundException;  // Import this class to handle errors
import java.util.Scanner; // Import the Scanner class to read text files
import java.util.ArrayList;
import java.io.PrintWriter;
import java.io.IOException;
import java.io.FileWriter;
import java.io.FileReader;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.io.BufferedWriter;
import java.io.Writer; 


 
import java.util.Iterator;
 
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

@Path("registrar/{name}/{planet}/") //Especificamos una ruta que se debe usar para invocar este método y un parámetro (tipo)
public class WebService
{
    private static final DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
    private static String filename = "../webapps/RESTful/WEB-INF/registroUsers.txt";
    public class Objeto{
      public String name;
      public String planet;
      public String fecha;

      public Objeto(String name, String planet, String fecha) {
        this.name = name;
        this.planet = planet;
        this.fecha = fecha;
      }
    }



		@GET //Indicamos que este método se ejecutará al recibir una petición por get
		@Produces({"text/plain"}) //Indicamos que el tipo de salida es texto plano
		public String registro(@PathParam("name") String name,@PathParam("planet") String planet)
		{
				
						WriteFile(filename,"patata","marte");

						return "Éste es mi primer servicio RESTfulfdasfasd con Java";
		
		}
		public boolean CreateFile(String filename){
				try{
				File myObj = new File(filename);
				 if (myObj.createNewFile()) {

						System.out.println("File created: " + myObj.getName());
						return true;
					} else {
						System.out.println("File already exists.");
						return false;
					} 
				}catch(IOException e){
					System.out.println(e);
					return false;
				}
		}
    public String CreateJson(String name, String planet){
      String message;
      //JSONObject jsonData =  JSONObject();

       //JSONObject person = new JSONObject();
       
       JSONArray FieldValues = new JSONArray(new JSONObject(new HashMap<Type1,Type2>().put(K,V)));
       
      hashMap.put("firstName", "Sergey");
      hashMap.put("lastName", "Kargopolov");
      System.out.println(hashMap.toString());     
      return hashMap.toString();
    }
		public void WriteFile(String filename, String name, String planet){
        try{
            CreateFile(filename);
           // FileWriter myWriter = new FileWriter(filename);
            Writer myWriter = new BufferedWriter(new FileWriter(filename, true));
            LocalDateTime now = LocalDateTime.now();

            if(CheckWrite(readFile(filename))){
              myWriter.append(CreateJson(name,planet));
              myWriter.write(System.getProperty("line.separator"));
              myWriter.close();
              System.out.println("Successfully wrote to the file.");
            }
        }catch(IOException e){
          System.out.println(e);
        }
		}

    public boolean CheckWrite(String content){

     return true;
    }

    public String readFile(String filename)
    {
        String content = null;
        File file = new File(filename); // For example, foo.txt
        FileReader reader = null;
        try {
            reader = new FileReader(file);
            char[] chars = new char[(int) file.length()];
            reader.read(chars);
            content = new String(chars);
            System.out.println(content);
            reader.close();
            return content;
        } catch (IOException e) {
            e.printStackTrace();
            return e.getMessage();
        } 
        
    }
}